{
	"info": {
		"_postman_id": "2f021339-d3d7-47c6-b529-a0d6388cefbb",
		"name": "AuthGuard",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "account",
			"item": [
				{
					"name": "create account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8250156-b324-4710-b76e-9b95a7866a23",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    ",
									"    ",
									"    let response = pm.response.json();",
									"    pm.environment.set(\"accountId\", response.id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authguard}}/accounts",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "create credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e48d3061-04e9-44bc-87ee-607e3a970303",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"accountId\": \"{{accountId}}\",\n\t\"identifiers\": [\n\t\t{\n\t\t\t\"identifier\": \"username\",\n\t\t\t\"type\": \"USERNAME\"\n\t\t}\n\t],\n\t\"plainPassword\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authguard}}/credentials",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"credentials"
							]
						}
					},
					"response": []
				},
				{
					"name": "create credentials same username",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e48d3061-04e9-44bc-87ee-607e3a970303",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"accountId\": \"{{accountId}}\",\n\t\"username\": \"username\",\n\t\"plainPassword\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authguard}}/credentials",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"credentials"
							]
						}
					},
					"response": []
				},
				{
					"name": "create credentials no account ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e48d3061-04e9-44bc-87ee-607e3a970303",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"    ",
									"    const error = pm.response.json();",
									"    ",
									"    pm.expect(error.message).to.have.length.greaterThan(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"accountId\": \"this-should-not-exist\",\n\t\"username\": \"not-to-be-used\",\n\t\"plainPassword\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authguard}}/credentials",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"credentials"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "92071a1f-5d41-4edb-b413-ea3331f0cb1e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "25cecffa-88ea-453b-8d87-577216af25b5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "account auth",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33e436a4-babd-49e2-afca-ff7f95166f15",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    let response = pm.response.json();",
									"    pm.environment.set(\"accessToken\", response.token);",
									"    pm.environment.set(\"refreshToken\", response.refreshToken);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"authorization\": \"Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"\n}"
						},
						"url": {
							"raw": "{{authguard}}/auth/authenticate",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a562f372-ee7d-4fd8-a3a3-4b892dcb9490",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"authorization\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{authguard}}/auth/exchange?from=refresh&to=accessToken",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"auth",
								"exchange"
							],
							"query": [
								{
									"key": "from",
									"value": "refresh"
								},
								{
									"key": "to",
									"value": "accessToken"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ab2eb5d2-b26c-4e25-827e-ece939c7f77b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3d595706-9ea8-42bb-a748-602599dc2137",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "account auth OTP",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33e436a4-babd-49e2-afca-ff7f95166f15",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let response = pm.response.json();",
									"pm.environment.set(\"otp-id\", response.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"authorization\": \"Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"\n}"
						},
						"url": {
							"raw": "{{authguard}}/auth/authenticate",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33e436a4-babd-49e2-afca-ff7f95166f15",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let response = pm.response.json();",
									"pm.environment.set(\"idToken\", response.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"passwordId\": \"{{otp-id}}\",\n\t\"password\": \"768033\"\n}"
						},
						"url": {
							"raw": "{{authguard}}/otp/verify",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"otp",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a562f372-ee7d-4fd8-a3a3-4b892dcb9490",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"authorization\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{authguard}}/auth/authorize/refresh",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"auth",
								"authorize",
								"refresh"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ab2eb5d2-b26c-4e25-827e-ece939c7f77b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3d595706-9ea8-42bb-a748-602599dc2137",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "account auth sessions",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33e436a4-babd-49e2-afca-ff7f95166f15",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct type\", () => {",
									"    const response = pm.response.json();",
									"    ",
									"    pm.expect(response.type).to.equal(\"session\");",
									"    pm.environment.set(\"session-id\", response.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"authorization\": \"Basic dXNlcm5hbWU6cGFzc3dvcmQ=\"\n}"
						},
						"url": {
							"raw": "{{authguard}}/auth/authenticate",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a562f372-ee7d-4fd8-a3a3-4b892dcb9490",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct type\", () => {",
									"    const response = pm.response.json();",
									"    ",
									"    pm.expect(response.type).to.equal(\"accountId\");",
									"    pm.expect(response.token).to.equal(pm.environment.get(\"accountId\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"authorization\": \"{{session-id}}\"\n}"
						},
						"url": {
							"raw": "{{authguard}}/auth/exchange?from=session&to=accountId",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"auth",
								"exchange"
							],
							"query": [
								{
									"key": "from",
									"value": "session"
								},
								{
									"key": "to",
									"value": "accountId"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "account auth passwordless",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33e436a4-babd-49e2-afca-ff7f95166f15",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct type\", () => {",
									"    const response = pm.response.json();",
									"    ",
									"    pm.expect(response.type).to.equal(\"passwordless\");",
									"    pm.expect(response.token).to.not.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"authorization\": \"Basic dXNlcm5hbWU6\"\n}"
						},
						"url": {
							"raw": "{{authguard}}/auth/authenticate",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify passwordless token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a562f372-ee7d-4fd8-a3a3-4b892dcb9490",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct type\", () => {",
									"    const response = pm.response.json();",
									"    ",
									"    pm.expect(response.type).to.equal(\"accessToken\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"token\": \"PakLQ8YJKvx3Ye+N5N0MPI/LM5f08y8vMHUow9w4ZgZgBuVD4DkCohXL2SKj65HdjJBFjYsVPrNNc3ciRFvYlafbmFtsgJHKI417vbs3o5p9OnwP35B1bEhkWqEgmpr4YZ/kuGT7eWeT2K8WtyjcszR88PQEEob4lRkstDjA2Ns=\"\n}"
						},
						"url": {
							"raw": "{{authguard}}/passwordless/verify",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"passwordless",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify invalid passwordless token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a562f372-ee7d-4fd8-a3a3-4b892dcb9490",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct type\", () => {",
									"    const response = pm.response.json();",
									"    ",
									"    pm.expect(response.message).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"token\": \"no chance this will be generated\"\n}"
						},
						"url": {
							"raw": "{{authguard}}/passwordless/verify",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"passwordless",
								"verify"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "application",
			"item": [
				{
					"name": "create application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e52e01c0-5928-4551-8070-80e2b8728e33",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"let response = pm.response.json();",
									"pm.environment.set(\"appId\", response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"accountId\": \"{{accountId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{authguard}}/apps",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"apps"
							]
						}
					},
					"response": []
				},
				{
					"name": "generate api key",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da0b009d-b123-41d2-8406-1919f03f7680",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Token fields\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.token).to.not.eql(null);",
									"    pm.expect(response.refreshToken).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{authguard}}/keys/{{appId}}",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"keys",
								"{{appId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9818a50-573b-46de-9304-3cbc0ce3d6b6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Token fields\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.length).to.be.eql(1);",
									"    ",
									"    const app = response[0];",
									"    ",
									"    pm.expect(app.accountId).to.be.eql(pm.environment.get(\"accountId\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authguard}}/accounts/{{accountId}}/apps",
							"host": [
								"{{authguard}}"
							],
							"path": [
								"accounts",
								"{{accountId}}",
								"apps"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e4f1620c-9d2c-40ba-8778-356ad47483b5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "19d47577-6299-4570-b55b-a28e27ffd3ea",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "90357687-7b27-4be0-8f31-196a4f5ab68b",
			"key": "authguard",
			"value": "http://localhost:3000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}